-- FIXME omitted definition of $KEYWORDS(KWB)
-- Language definition generated by lang2to3

Description="Bash"

Keywords={
  { Id=1,
    List={"case", "in", "esac", "for", "do", "done", "function", "if", "then",
"fi", "elif", "else", "select", "time", "until", "while"},
  },
  { Id=2,
    List={"source", "alias", "bind", "break", "builtin", "command", "continue",
"declare", "dirs", "disown", "echo", "enable", "export", "fc", "fg", "getopts",
"hash", "help", "history", "jobs",  "let", "local", "logout", "popd", "printf",
"pushd", "pwd", "read", "readonly", "return", "set",  "shift", "shopt",
"suspend", "test", "times", "trap", "type", "ulimit", "umask", "unalias",
"unset", "wait", "eval", "bg", "cd", "echo", "eval", "exec", "exit", "kill",
"read", "set", "test", "trap", "ulimit", "umask", "wait"},
  },
  { Id=3,
    List={"ls", "cat", "tac", "rev", "cp", "mv", "rm", "rmdir", "chmod",
"chattr", "ln", "find", "xargs", "expr", "date", "zdump", "time", "touch", "at",
"batch", "cal", "sleep", "usleep", "hwclock", "clock", "sort", "tsort", "diff",
"patch", "diff3", "sdiff", "cmp", "comm", "uniq", "expand", "unexpand", "cat",
"paste", "join", "head", "tail", "grep", "egrep", "zgrep", "look", "sed", "awk",
"wc", "tr", "fold", "fmt", "ptx", "col", "column", "colrm", "nl", "pr",
"gettext", "iconv", "recode", "groff", "lex", "yacc", "tar", "shar", "ar",
"cpio", "gzip", "bzip2", "compress", "uncompress", "zip", "unzip", "sq", "file",
"which", "whereis", "whatis", "vdir", "shred", "locate", "slocate", "strings",
"basename", "dirname", "split", "sum", "cksum", "md5sum", "sha1sum", "uuencode",
"uudecode", "crypt", "make", "install", "more", "less", "host", "vrfy",
"nslookup", "dig", "traceroute", "ping", "whois", "finger", "ftp", "uucp",
"telnet", "rlogin", "rsh", "rcp", "ssh", "write", "mail", "vacation", "tput",
"reset", "clear", "script", "factor", "bc", "dc", "jot", "seq", "yes", "banner",
"printenv", "lp", "tee", "mkfifo", "pathchk", "dd", "od", "hexdump", "m4"},
  },
  --{ Id=3,
  --  Regex=[[(\w+)\s*\(]]
  --},
  { Id=4,
    Regex=[[\$\{.+?\}]],
  },
  { Id=4,
    Regex=[[ \$[\w\#]+ ]],
  },
}

Strings={
  Delimiter=[["|'|`]],
}

IgnoreCase=false

Comments={
  { Block=false,
    Delimiter= { [[#]] },
  },
}

Operators=[[\(|\)|\[|\]|\{|\}|\,|\;|\:|\&|<|>|\!|\=|\/|\*|\%|\+|\-]]

